blueprint:
  name: MQTT Publish for Environmental Sensor (Temperature, Humidity)
  description: Publishes sensor data along with static information via MQTT
  domain: automation
  input:
    temperature_sensor:
      name: Temperature Sensor
      selector:
        entity:
          filter:
          - device_class:
            - temperature
          multiple: false
    humidity_sensor:
      name: Humidity Sensor
      selector:
        entity:
          filter:
          - device_class:
            - humidity
          multiple: false
    static_application_id:
      name: Application ID
      default: ""
    static_site_id:
      name: Site ID
      default: ""
    static_room_id:
      name: Room ID
      default: ""
    static_floor_id:
      name: Floor Number
      default: ""
    static_device_id:
      name: Device ID
      default: ""
    static_placement:
      name: Placement
      selector:
        select:
          options:
            - indoors
            - outdoors
            - moving
    static_controllable:
      name: Controllable
      selector:
        select:
          options:
            - true
            - false
    static_municipality:
      name: Municipality
      default: ""
    static_device_type:
      name: Device Type
      default: environmental
    mqtt_topic:
      name: MQTT Topic
      default: monitor_testing/dimitris
  source_url: https://github.com/DimSalPro/Home-Assistant-MQTT-Blueprints/blob/main/environmental_sensor_blueprint.yaml

variables:
  temperature_sensor: !input temperature_sensor
  humidity_sensor: !input humidity_sensor
  static_application_id: !input static_application_id
  static_site_id: !input static_site_id
  static_room_id: !input static_room_id
  static_floor_id: !input static_floor_id
  static_device_id: !input static_device_id
  static_placement: !input static_placement
  static_municipality: !input static_municipality
  static_device_type:  !input static_device_type
  static_controllable: !input static_controllable
  application_id: '{{ static_application_id | default("-") | replace(" ", "") | lower }}'
  site_id: '{{ static_site_id | default("-") | replace(" ", "") | lower }}'
  room_id: '{{ static_room_id | default("-") | replace(" ", "") | lower }}'
  floor_id: '{{ static_floor_id | default("-") | replace(" ", "") | lower }}'
  device_id: '{{ static_device_id | default("-") | replace(" ", "") | lower }}'
  placement: '{{ static_placement | default("-") | replace(" ", "") | lower }}'
  municipality: '{{ static_municipality | default("-") | replace(" ", "") | lower }}'
  device_type: '{{ static_device_type | default("-") | replace(" ", "") | lower }}'
  temperature: '{{ expand(temperature_sensor)[0].state | float }}'
  humidity: '{{ expand(humidity_sensor)[0].state | float }}'
  controllable: >
    {% if static_controllable == 'yes' %}
      1
    {% elif static_controllable == 'no' %}
      -1
    {% else %}
      0
    {% endif %}

trigger:
  - platform: time_pattern
    seconds: /30

action:
  - service: mqtt.publish
    data:
      topic: !input mqtt_topic
      payload: >
        {
          "application_id": "{{ application_id }}",
          "site_id": "{{ site_id }}",
          "room_id": "{{ room_id }}",
          "floor_id": "{{ floor_id }}",
          "device_id": "{{ device_id }}",
          "placement": "{{ placement }}",
          "municipality": "{{ municipality }}",
          "device_type": "{{ device_type }}",
          "controllable": {{ controllable }},
          "temperature": {{ temperature }},
          "humidity": {{ humidity }}
        }

mode: single
